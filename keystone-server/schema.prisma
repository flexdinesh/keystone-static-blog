// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Config {
  id                String @id @default(cuid())
  uniqueField       String @unique @default("config")
  homepageFeedStyle String @default("flat")
}

model Meta {
  id               String @id @default(cuid())
  uniqueField      String @unique @default("meta")
  title            String @default("")
  about            String @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  name             String @default("")
  github           String @default("")
  twitter          String @default("")
  metaTitle        String @default("")
  metaDescription  String @default("")
  metaImageUrl     String @default("")
  metaImageAltText String @default("")
  metaImageWidth   String @default("")
  metaImageHeight  String @default("")
  metaUrl          String @default("")
}

model Post {
  id               String    @id @default(cuid())
  title            String    @default("")
  slug             String    @unique @default("")
  status           String?   @default("draft")
  category         Category? @relation("Post_category", fields: [categoryId], references: [id])
  categoryId       String?   @map("category")
  publishDate      DateTime?
  metaDescription  String    @default("")
  metaImageUrl     String    @default("")
  metaImageAltText String    @default("")
  metaImageWidth   String    @default("")
  metaImageHeight  String    @default("")
  content          String    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")

  @@index([categoryId])
}

model Link {
  id          String    @id @default(cuid())
  title       String    @default("")
  url         String    @unique @default("")
  status      String?   @default("published")
  category    Category? @relation("Link_category", fields: [categoryId], references: [id])
  categoryId  String?   @map("category")
  publishDate DateTime?

  @@index([categoryId])
}

model Category {
  id    String @id @default(cuid())
  name  String @unique @default("blog")
  posts Post[] @relation("Post_category")
  links Link[] @relation("Link_category")
}