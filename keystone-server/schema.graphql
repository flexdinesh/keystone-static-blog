# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type User {
  id: ID!
  email: String
  name: String
  github: String
  twitter: String
  posts(
    where: PostWhereInput! = {}
    orderBy: [PostOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Post!]
  postsCount(where: PostWhereInput! = {}): Int
  externalLinks(
    where: ExternalLinkWhereInput! = {}
    orderBy: [ExternalLinkOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [ExternalLink!]
  externalLinksCount(where: ExternalLinkWhereInput! = {}): Int
}

input UserWhereUniqueInput {
  id: ID
  email: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IDFilter
  email: StringFilter
  name: StringFilter
  github: StringFilter
  twitter: StringFilter
  posts: PostManyRelationFilter
  externalLinks: ExternalLinkManyRelationFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input PostManyRelationFilter {
  every: PostWhereInput
  some: PostWhereInput
  none: PostWhereInput
}

input ExternalLinkManyRelationFilter {
  every: ExternalLinkWhereInput
  some: ExternalLinkWhereInput
  none: ExternalLinkWhereInput
}

input UserOrderByInput {
  id: OrderDirection
  email: OrderDirection
  name: OrderDirection
  github: OrderDirection
  twitter: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input UserUpdateInput {
  email: String
  name: String
  github: String
  twitter: String
  posts: PostRelateToManyForUpdateInput
  externalLinks: ExternalLinkRelateToManyForUpdateInput
}

input PostRelateToManyForUpdateInput {
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  create: [PostCreateInput!]
  connect: [PostWhereUniqueInput!]
}

input ExternalLinkRelateToManyForUpdateInput {
  disconnect: [ExternalLinkWhereUniqueInput!]
  set: [ExternalLinkWhereUniqueInput!]
  create: [ExternalLinkCreateInput!]
  connect: [ExternalLinkWhereUniqueInput!]
}

input UserUpdateArgs {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input UserCreateInput {
  email: String
  name: String
  github: String
  twitter: String
  posts: PostRelateToManyForCreateInput
  externalLinks: ExternalLinkRelateToManyForCreateInput
}

input PostRelateToManyForCreateInput {
  create: [PostCreateInput!]
  connect: [PostWhereUniqueInput!]
}

input ExternalLinkRelateToManyForCreateInput {
  create: [ExternalLinkCreateInput!]
  connect: [ExternalLinkWhereUniqueInput!]
}

type Post {
  id: ID!
  title: String
  slug: String
  status: PostStatusType
  publishDate: DateTime
  author: User
  metaDescription: String
  metaImageUrl: String
  metaImageAltText: String
  content: Post_content_Document
}

enum PostStatusType {
  draft
  published
}

scalar DateTime
  @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

type Post_content_Document {
  document(hydrateRelationships: Boolean! = false): JSON!
}

input PostWhereUniqueInput {
  id: ID
  slug: String
}

input PostWhereInput {
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
  id: IDFilter
  title: StringFilter
  slug: StringFilter
  status: PostStatusTypeNullableFilter
  publishDate: DateTimeNullableFilter
  author: UserWhereInput
  metaDescription: StringFilter
  metaImageUrl: StringFilter
  metaImageAltText: StringFilter
}

input PostStatusTypeNullableFilter {
  equals: PostStatusType
  in: [PostStatusType!]
  notIn: [PostStatusType!]
  not: PostStatusTypeNullableFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input PostOrderByInput {
  id: OrderDirection
  title: OrderDirection
  slug: OrderDirection
  status: OrderDirection
  publishDate: OrderDirection
  metaDescription: OrderDirection
  metaImageUrl: OrderDirection
  metaImageAltText: OrderDirection
}

input PostUpdateInput {
  title: String
  slug: String
  status: PostStatusType
  publishDate: DateTime
  author: UserRelateToOneForUpdateInput
  metaDescription: String
  metaImageUrl: String
  metaImageAltText: String
  content: JSON
}

input UserRelateToOneForUpdateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
}

input PostUpdateArgs {
  where: PostWhereUniqueInput!
  data: PostUpdateInput!
}

input PostCreateInput {
  title: String
  slug: String
  status: PostStatusType
  publishDate: DateTime
  author: UserRelateToOneForCreateInput
  metaDescription: String
  metaImageUrl: String
  metaImageAltText: String
  content: JSON
}

input UserRelateToOneForCreateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

type ExternalLink {
  id: ID!
  title: String
  url: String
  status: ExternalLinkStatusType
  publishDate: DateTime
  type: ExternalLinkTypeType
  author: User
}

enum ExternalLinkStatusType {
  draft
  published
}

enum ExternalLinkTypeType {
  github
  twitter
  dev
  medium
  youtube
  podcast
}

input ExternalLinkWhereUniqueInput {
  id: ID
  url: String
}

input ExternalLinkWhereInput {
  AND: [ExternalLinkWhereInput!]
  OR: [ExternalLinkWhereInput!]
  NOT: [ExternalLinkWhereInput!]
  id: IDFilter
  title: StringFilter
  url: StringFilter
  status: ExternalLinkStatusTypeNullableFilter
  publishDate: DateTimeNullableFilter
  type: ExternalLinkTypeTypeNullableFilter
  author: UserWhereInput
}

input ExternalLinkStatusTypeNullableFilter {
  equals: ExternalLinkStatusType
  in: [ExternalLinkStatusType!]
  notIn: [ExternalLinkStatusType!]
  not: ExternalLinkStatusTypeNullableFilter
}

input ExternalLinkTypeTypeNullableFilter {
  equals: ExternalLinkTypeType
  in: [ExternalLinkTypeType!]
  notIn: [ExternalLinkTypeType!]
  not: ExternalLinkTypeTypeNullableFilter
}

input ExternalLinkOrderByInput {
  id: OrderDirection
  title: OrderDirection
  url: OrderDirection
  status: OrderDirection
  publishDate: OrderDirection
  type: OrderDirection
}

input ExternalLinkUpdateInput {
  title: String
  url: String
  status: ExternalLinkStatusType
  publishDate: DateTime
  type: ExternalLinkTypeType
  author: UserRelateToOneForUpdateInput
}

input ExternalLinkUpdateArgs {
  where: ExternalLinkWhereUniqueInput!
  data: ExternalLinkUpdateInput!
}

input ExternalLinkCreateInput {
  title: String
  url: String
  status: ExternalLinkStatusType
  publishDate: DateTime
  type: ExternalLinkTypeType
  author: UserRelateToOneForCreateInput
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON
  @specifiedBy(
    url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
  )

type Mutation {
  createUser(data: UserCreateInput!): User
  createUsers(data: [UserCreateInput!]!): [User]
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UserUpdateArgs!]!): [User]
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: [UserWhereUniqueInput!]!): [User]
  createPost(data: PostCreateInput!): Post
  createPosts(data: [PostCreateInput!]!): [Post]
  updatePost(where: PostWhereUniqueInput!, data: PostUpdateInput!): Post
  updatePosts(data: [PostUpdateArgs!]!): [Post]
  deletePost(where: PostWhereUniqueInput!): Post
  deletePosts(where: [PostWhereUniqueInput!]!): [Post]
  createExternalLink(data: ExternalLinkCreateInput!): ExternalLink
  createExternalLinks(data: [ExternalLinkCreateInput!]!): [ExternalLink]
  updateExternalLink(
    where: ExternalLinkWhereUniqueInput!
    data: ExternalLinkUpdateInput!
  ): ExternalLink
  updateExternalLinks(data: [ExternalLinkUpdateArgs!]!): [ExternalLink]
  deleteExternalLink(where: ExternalLinkWhereUniqueInput!): ExternalLink
  deleteExternalLinks(where: [ExternalLinkWhereUniqueInput!]!): [ExternalLink]
}

type Query {
  users(
    where: UserWhereInput! = {}
    orderBy: [UserOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [User!]
  user(where: UserWhereUniqueInput!): User
  usersCount(where: UserWhereInput! = {}): Int
  posts(
    where: PostWhereInput! = {}
    orderBy: [PostOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Post!]
  post(where: PostWhereUniqueInput!): Post
  postsCount(where: PostWhereInput! = {}): Int
  externalLinks(
    where: ExternalLinkWhereInput! = {}
    orderBy: [ExternalLinkOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [ExternalLink!]
  externalLink(where: ExternalLinkWhereUniqueInput!): ExternalLink
  externalLinksCount(where: ExternalLinkWhereInput! = {}): Int
  keystone: KeystoneMeta!
}

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  enableSignout: Boolean!
  enableSessionItem: Boolean!
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
